(setf dd 12)
(setf mm 10)
(setf LARGEST-COIN 50)

double cc(double amount, double largest__coin){
 return
 (  (amount == 0 || largest__coin == 1) ? 1
  : !(amount  > 0 && largest__coin > 0) ? 0
  : (cc(amount, next__coin(largest__coin)) +
     cc(amount - largest__coin, largest__coin)
    )
 );
}

(define (cc amount largest-coin)
    (cond   ((or((= amount 0) (= largest-coin 1)) 1))
            ((not (and ((> amount 0) (> largest-coin 0)))) 0)
    (else (+ (cc(amount next-coin(largest-coin)) cc( - (amount largest__coin) largest__coin))))
    )

)


(define (next-coin coin)
    (cond (((= coin 15) 10)
            ((= coin 10) 3)
            ((= coin 3) 2)
            ((= coin 2) 1)
            else (0))
)
(define (GR-AMOUNT) 
    (remainder ((+(* 100 mm) dd) 137))
)

(define count-change
    (cc (amount LARGEST-COIN))

)

(define (main)
    display(" arp variant 11") newline
    display(" 1-2-3-10-15") newline
    display("count-change for 100 \t= ")
    display(count-change(100))newline
    display("count-change for ")
    display(GR-AMOUNT)
    display(" \t= ")
    display(count-change(GR-AMOUNT)) newline
    0
)
